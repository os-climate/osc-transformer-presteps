---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🤖 DevOps Automation"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - master
  push:
    paths:
      - "**"
      - "!.github/**"
      - "!.*"
      - "!pdm.lock"
      - "!tox.ini"

permissions: {}

jobs:
  repository:
    name: "Repository"
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/repository.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    permissions:
      # Required for action that creates labels: github-labels
      contents: read

  python-project:
    name: "Python project"
    needs: repository
    if: needs.repository.outputs.python_project  == 'true'
    runs-on: ubuntu-24.04
    outputs:
      # Gather Python project metadata
      python_project_name: ${{ steps.python_metadata.outputs.python_project_name }}
      python_build_name: ${{ steps.python_metadata.outputs.python_build_name }}
      versioning_type: ${{ steps.python_metadata.outputs.versioning_type }}
      matrix_json: ${{ steps.python_metadata.outputs.matrix_json }}
      build_python_version: ${{ steps.python_metadata.outputs.build_python_version }}
    permissions:
      contents: read
    steps:
      - name: "Extract project metadata"
        id: python_metadata
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-project-setup@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11

      - name: "Check pushed tag [CONDITIONAL/tag push]"
        id: check-project
        if: startsWith(github.ref, 'refs/tags/')
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-project-version-vs-tag@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11

      - name: "Report pushed tag mismatch [CONDITIONAL/tag push]"
        if: startsWith(github.ref, 'refs/tags/') && steps.check-project.outputs.match == 'false'
        run: |
          # Pushed tag != project metadata
          echo "Result: ${{ steps.check-project.outputs.match }}"
          echo "## Pushed tag does not match pyproject.toml version ❌" >> "$GITHUB_STEP_SUMMARY"
          exit 1

  python-build:
    name: "Build"
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/python-build.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    needs:
      - repository
      - python-project
    permissions:
      contents: write
      # Required by SigStore signing action
      id-token: write
      # Required for attestations
      attestations: write
    with:
      build_python_version: ${{ needs.python-project.outputs.build_python_version }}
      build_tag: ${{ needs.repository.outputs.build_tag }}

  python-test:
    name: "Test"
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/python-tests.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    needs:
      - python-project
      - python-build
    # Matrix job
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.python-project.outputs.matrix_json) }}
    with:
      python_version: ${{ matrix.python-version }}
    permissions:
      contents: read

  python-security:
    name: "Security"
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/python-security.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    needs:
      - python-project
      - python-build
    # Matrix job
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.python-project.outputs.matrix_json) }}
    with:
      python_version: ${{ matrix.python-version }}
    permissions:
      contents: read

  notebooks:
    name: "Jupyter notebooks"
    if: needs.repository.outputs.jupyter_notebooks  == 'true'
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/jupyter-notebooks.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    needs:
      - repository
      - python-project
      - python-build
    # Matrix job
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.python-project.outputs.matrix_json) }}
    with:
      python_version: ${{ matrix.python-version }}
    permissions:
      contents: read

  github-release:
    name: "Release"
    # yamllint disable-line rule:line-length
    if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[release]')
    needs:
      - repository
      - python-project
      - python-build
      - python-test
      - python-security
    runs-on: "ubuntu-24.04"
    permissions:
      contents: write
    steps:
      # yamllint disable-line rule:line-length
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Extract project/repository naming"
        id: naming
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-project-name@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11

      - name: "⬇ Download build artefacts"
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ env.python_project_name }}
          path: "dist"

      - name: "Check project version matches pushed tags"
        if: startsWith(github.ref, 'refs/tags/')
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/python-project-version-vs-tag@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11

      - name: "GitHub Release"
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/github-release-action@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
        with:
          project_name: ${{ env.python_project_name }}
          artefact_location: "dist"
          build_tag: ${{ needs.repository.outputs.build_tag }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  pypi-test:
    name: "Test"
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/pypi-publish.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    needs:
      - repository
      - python-build
      - python-test
      - python-security
    with:
      environment: "development"
      build_tag: ${{ needs.repository.outputs.build_tag }}
      one_password_item: "op://hdiyadcjno2knqgvcy4wj5ulya/tm2ffuusrynfivtcsnamginhm4/password"
    permissions:
      contents: read
      # Needed for trusted publishing; must also be passed from parent workflows
      id-token: write
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.ONE_PASSWORD_PRODUCTION }}
      PYPI_CREDENTIAL: ${{ secrets.PYPI_DEVELOPMENT }}

  pypi:
    name: "Release"
    # yamllint disable-line rule:line-length
    if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[release]')
    # yamllint disable-line rule:line-length
    uses: os-climate/osc-github-devops/.github/workflows/pypi-publish.yaml@5fa9a143af43c6c541fcabf6b86e90a4ae4a5c53 # v0.1.11
    needs:
      - repository
      - python-build
      - python-test
      - python-security
      - pypi-test
    with:
      environment: "production"
      build_tag: ${{ needs.repository.outputs.build_tag }}
      one_password_item: "op://hdiyadcjno2knqgvcy4wj5ulya/vds5rebqxeqfrjqwpszxxicmzq/password"
    permissions:
      contents: read
      # Needed for trusted publishing; must also be passed from parent workflows
      id-token: write
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.ONE_PASSWORD_PRODUCTION }}
      PYPI_CREDENTIAL: ${{ secrets.PYPI_PRODUCTION }}
